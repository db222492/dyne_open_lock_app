apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'  //kapt3插件

android {
//

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.xinzeyijia.houselocks"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
        // 实现毛玻璃那种透明的效果需要添加的库
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true    // Enable RS support

        ndk {

            //APP的build.gradle设置支持的SO库架构
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }
    signingConfigs {
        release {
            keyAlias 'houselocks'
            keyPassword '222492'
            storeFile file('..\\houselocks.jks')
            storePassword '222492'
        }
        debug {
            storeFile file('..\\houselocks.jks')
            keyAlias = 'houselocks'
            storePassword '222492'
            keyPassword '222492'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable false
            minifyEnabled true //混淆
            zipAlignEnabled true //Zipalign优化
            shrinkResources true// 移除无用的resource文件
            versionNameSuffix '-release'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "YLXB_LOCK_V${variant.versionName}.apk"
                }
            }
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            versionNameSuffix '-debug'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "YLXB_LOCK_V${variant.versionName}.apk"
                }
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {

    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    dexOptions {
        javaMaxHeapSize '6g'
        preDexLibraries false
    }
    dexOptions {
        jumboMode true
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    packagingOptions {//依赖包内冲突的文件忽略
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/Binarizer'
        exclude 'META-INF/ChecksumException'
        exclude 'META-INF/DecodeHintType'
    }
    configurations {
        all*.exclude group: 'com.classic.common.BuildConfig'
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", '*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:2.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }


    //Logger
    implementation 'com.orhanobut:logger:2.2.0'
    //屏幕适配
    implementation 'me.jessyan:autosize:1.2.1'

    implementation 'com.jpeng:JPTabBar:1.4.0'
    //分包64
    implementation 'com.android.support:multidex:1.0.3'
    //网络框架
    implementation 'com.vise.xiaoyaoyou:xsnow:2.1.9'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //导航栏
    implementation 'com.github.chaychan:BottomBarLayout:1.0.9'
    //Google开源的一个布局控件
    implementation 'com.google.android:flexbox:0.3.1'
    implementation project(':faceplatform-ui')
    //leakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //腾讯 bugly
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'

    //腾讯的键值对存储mmkv
//    implementation 'com.tencent:mmkv:1.0.22'
//TabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    //smartRefreshLayout 下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'

    //没有使用特殊Header，可以不加这行
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    //携带各种试图的布局
    implementation 'com.classic.common:multiple-status-view:1.5.1'

    //高级图片选择器
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.8'
    //JSON
    implementation 'com.alibaba:fastjson:1.2.58'

    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta05'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0-beta05'
    //蓝牙
    implementation 'com.clj.fastble:FastBleLib:2.3.4'
    //banner
    implementation 'com.youth.banner:banner:1.4.10'
    //图片加载.
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation files('libs/smartlock-sdk-v1.2.0.jar')
    //权限申请
    implementation 'com.hjq:xxpermissions:6.2'
    //mmkv
    implementation 'com.tencent:mmkv-static:1.2.4'
    //定位功能
    implementation 'com.amap.api:location:5.1.0'
}